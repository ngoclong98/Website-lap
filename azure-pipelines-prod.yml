# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - release/prod
  paths:
    include:
      - miniapp/*

resources:
  - repo: self

variables:
  DockerImageName: 'mb-inhandao-prod/miniapp'
  DockerFile: 'miniapp/Dockerfile'
  DockerRegistry: 'mb-inhandao-prod-container-registry'

stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: 'Install Node.js'

          - task: Cache@2
            inputs:
              key: 'npm | "$(Agent.OS)" | miniapp/yarn.lock'
              restoreKeys: |
                npm | "$(Agent.OS)"
                npm
              path: miniapp/node_modules
            displayName: Cache npm

          - script: |
              npm install -g yarn
              yarn install
              yarn build
            workingDirectory: miniapp/
            displayName: 'yarn install and build'

          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              containerRegistry: '$(DockerRegistry)'
              repository: '$(DockerImageName)'
              command: 'buildAndPush'
              Dockerfile: '$(DockerFile)'
              tags: '$(Build.BuildId)'

          - task: CmdLine@1
            displayName: 'Lock image version in deployment.yaml'
            inputs:
              filename: /bin/bash
              arguments: '-c "awk ''{gsub(\"APP_IMAGE\", \"gcr.io/$(DockerImageName):$(Build.BuildId)\", $0); print}'' kubernetes/prod/miniapp-deployment.yaml > $(build.artifactstagingdirectory)/deployment.yaml"'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
